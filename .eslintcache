[{"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\index.js":"1","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\App.js":"2","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\serviceWorker.js":"3","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\app\\store.js":"4","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Sidebar.jsx":"5","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\SidebarChannel.jsx":"6","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Chat.jsx":"7","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\ChatHeader.jsx":"8","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Message.jsx":"9","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\features\\userSlice.js":"10","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\features\\appSlice.js":"11","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Login.jsx":"12","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\firebase.js":"13"},{"size":644,"mtime":1608061732004,"results":"14","hashOfConfig":"15"},{"size":1230,"mtime":1609260559314,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":1608061732004,"results":"17","hashOfConfig":"15"},{"size":255,"mtime":1609187397166,"results":"18","hashOfConfig":"15"},{"size":3603,"mtime":1609270706778,"results":"19","hashOfConfig":"15"},{"size":772,"mtime":1609275570211,"results":"20","hashOfConfig":"15"},{"size":2922,"mtime":1609305762236,"results":"21","hashOfConfig":"15"},{"size":1308,"mtime":1609274148878,"results":"22","hashOfConfig":"15"},{"size":532,"mtime":1608756059495,"results":"23","hashOfConfig":"15"},{"size":461,"mtime":1609257174228,"results":"24","hashOfConfig":"15"},{"size":583,"mtime":1609273469838,"results":"25","hashOfConfig":"15"},{"size":787,"mtime":1609260680785,"results":"26","hashOfConfig":"15"},{"size":601,"mtime":1608768778938,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1hsait5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\index.js",[],["60","61"],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\App.js",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\serviceWorker.js",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\app\\store.js",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Sidebar.jsx",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\SidebarChannel.jsx",["62"],"import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setChannelId } from '../features/appSlice';\r\n\r\n/***** CSS *****/\r\nimport './SidebarChannel.css'\r\n\r\nconst Sidebarchannel = ({ id, channelName }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"sidebarChannel\" onClick={setChannelId}>\r\n            <h4>\r\n                <span className=\"sidebarChannel__hash\">#</span>\r\n                {channelName}\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebarchannel\r\n",["63","64"],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Chat.jsx",["65","66"],"import React, {useEffect, useState} from 'react'\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectChannelId, selectChannelName } from '../features/appSlice';\r\nimport { selectUser } from '../features/userSlice'\r\n\r\n/** ICON */\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\n/** Component */\r\nimport ChatHeader from './ChatHeader'\r\nimport Message from './Message';\r\n\r\n/***** CSS *****/\r\nimport './Chat.css'\r\nimport db from './firebase';\r\n\r\n\r\n\r\nconst Chat = () => {\r\n\r\n    const user = useSelector(selectUser);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            db.collection('channels')\r\n            .doc(channelId)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot((snapshot) =>\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n        }\r\n    }, [])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('channels')\r\n        .doc(channelId)\r\n        .collection('message')\r\n        .add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            user: user\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName}/>\r\n            <div className=\"chat__messages\">\r\n                {messages.map((Message) => (\r\n                    <Message />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\"/>\r\n                <form>\r\n                    <input\r\n                        value={input}\r\n                        disabled={!channelId}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder={`Message #${channelName}`}\r\n                    />\r\n                    <button\r\n                        className=\"chat__inputButton\"\r\n                        disabled={!channelId}\r\n                        type=\"submit\"\r\n                        onClick={sendMessage}\r\n                    >\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n                <div className=\"chat__inputIcons\">\r\n                    <CardGiftcardIcon fontSize=\"large\"/>\r\n                    <GifIcon fontSize=\"large\"/>\r\n                    <EmojiEmotionsIcon fontSize=\"large\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\ChatHeader.jsx",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Message.jsx",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\features\\userSlice.js",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\features\\appSlice.js",[],"C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\Login.jsx",["67"],"import React from 'react'\r\nimport { auth, provider } from './firebase'\r\n\r\n/***** Component *****/\r\n\r\n/***** CSS *****/\r\nimport './Login.css'\r\n\r\n/***** Material Component *****/\r\nimport { Button } from \"@material-ui/icons\"\r\n\r\nconst Login = () => {\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .catch((error) => alert(error.message))\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__logo\">\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/sco/thumb/9/98/Discord_logo.svg/880px-Discord_logo.svg.png\"\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <button onClick={signIn}>Sign In</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\robpa\\OneDrive\\Escritorio\\project\\discord-clone\\src\\components\\firebase.js",["68"],"import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCpQroja1eEM0-nqsx8E3fVOKQMozYjO0M\",\r\n    authDomain: \"discord-clone-48a20.firebaseapp.com\",\r\n    projectId: \"discord-clone-48a20\",\r\n    storageBucket: \"discord-clone-48a20.appspot.com\",\r\n    messagingSenderId: \"95883203070\",\r\n    appId: \"1:95883203070:web:f5035680b80151476e70af\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":11,"nodeType":"75","messageId":"76","endLine":9,"endColumn":19},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","severity":1,"message":"79","line":15,"column":8,"nodeType":"75","messageId":"76","endLine":15,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":41,"column":8,"nodeType":"82","endLine":41,"endColumn":10,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"84","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":16},{"ruleId":"73","severity":1,"message":"85","line":12,"column":7,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["86"],["87"],"'Message' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'channelId'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'Button' is defined but never used.","'firebaseApp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [channelId]",{"range":"91","text":"92"},[1294,1296],"[channelId]"]